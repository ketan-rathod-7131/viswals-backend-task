version: "3.8"

services:
  rabbitmq:
    image: rabbitmq
    container_name: rabbitmq
    ports:
      - "5672:5672" 
    environment:
      RABBITMQ_DEFAULT_USER: guest
      RABBITMQ_DEFAULT_PASS: guest
    volumes:
      - rabbitmq_data:/var/lib/rabbitmq 
    healthcheck:
      test: rabbitmq-diagnostics -q ping
      interval: 30s
      timeout: 30s
      retries: 3

  postgres:
    image: postgres:15
    container_name: postgres
    ports:
      - "5432:5432"
    environment:
      POSTGRES_USER: admin
      POSTGRES_PASSWORD: adminpassword
      POSTGRES_DB: mydatabase
    volumes:
      - postgres_data:/var/lib/postgresql/data 
    healthcheck:
      test: pg_isready -U postgres -d postgres
      interval: 10s
      timeout: 5s
      retries: 5

  redis:
    image: redis:7
    container_name: redis
    ports:
      - "6379:6379"
    command: ["redis-server", "--appendonly", "yes"]
    volumes:
      - redis_data:/data 
    healthcheck:
      test:  ["CMD", "redis-cli","ping"]
      interval: 10s
      timeout: 5s
      retries: 5

  producer:
    build:
      context: .
      dockerfile: ./build/Dockerfile-producer
    container_name: producer
    env_file:
      .env
    depends_on:
      - rabbitmq
    volumes:
      - ./producer:/app 
    command: ["/server", "--filepath=./users.csv"]

  consumer:
    build:
      context: .
      dockerfile: ./build/Dockerfile-consumer
    container_name: consumer
    env_file:
      - .env
    depends_on:
      - rabbitmq
      - postgres
      - redis
    volumes:
      - ./consumer:/app
    command: ["/server", "--consume"]
    ports:
      - "8080:8080"

volumes:
  rabbitmq_data:
    driver: local
  postgres_data:
    driver: local
  redis_data:
    driver: local
